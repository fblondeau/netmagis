{
\modele {texte}

\set {auteur}	{pda/jean}
\set {date}	{15/06/2015}

\*******************************************************************************
\partie {banniere} { \* Le titre de la page (bandeau de la fenÃªtre)
    Netmagis - Installation manual
}

\*******************************************************************************
\partie {titrepage} { \* Titre de la page
    Netmagis
}

\*******************************************************************************
\bandeau {
	Installation
    } {
	\elementbandeau {Contents} {
	    \reference {\lien {What's new}	{/news.html}}
	    \reference {\lien {Introduction}	{/intro.html}}
	    \reference {\lien {Specifications}	{/spec.html}}
	    \reference {\lien {Documentation}	{/doc.html}}
	    \reference {\lien {Support}		{/support.html}}
	    \reference {\lien {Download}	{/download.html}}
	    \reference {\lien {Screenshots}	{/screenshots.html}}
	    \reference {\lien {Demonstration}	{/demo.html}}
	    \reference {\lien {Development}	{/dev.html}}
	    \reference {\lien {License}		{/license.html}}
	}
}

\*******************************************************************************
\partie {texte} { \* Le texte proprement dit

    \titre {1} {Netmagis 2.3.x installation}

    \* \gras {Warning: this installation documentation is written
    \* for the upcoming Netmagis version (2.3.0). The current version
    \* is available only on \lien {Netmagis Github repository}
    \* {http://github.com/pdav/netmagis} at this time.}

    Note: this installation documentation is for Netmagis version 2.3.x
    (x \gt= 0) If you are installing from a previous version
    of Netmagis, you should rather read \lien {upgrade instructions}
    {upgrade.html}.

    \**********************************************************************

    \titre {2} {Program and file installation}

    \titre {3} {Determining which packages are needed}

    The netmagis is divided into packages in order to install only what
    you need:

    \tableau {
	\taille {100}
	\bordure {1} {}
    } {
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
    } {
	\lignetableau {
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Package}}
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	}
	\lignetableau {
	    \casetableau {} {\italique {common}}
	    \casetableau {} {This package is mandatory for all
		installations. It includes common files and
		a configuration example.}
	}
	\lignetableau {
	    \casetableau {} {\italique {database}}
	    \casetableau {} {Database server (maintenance and
		installation scripts, as well as scripts to upgrade
		database from previous versions).
	    }
	}
	\lignetableau {
	    \casetableau {} {\italique {www}}
	    \casetableau {} {Web application (CGI scripts, HTML
		templates, Apache configuration files, etc.).
	    }
	}
	\lignetableau {
	    \casetableau {} {\italique {servers}}
	    \casetableau {} {Scripts running on various servers (DNS,
		DHCP, mail router).
	    }
	}
	\lignetableau {
	    \casetableau {} {\italique {utils}}
	    \casetableau {} {Scripts to ease batch modifications of
		hosts in the database.
	    }
	}
	\lignetableau {
	    \casetableau {} {\italique {detecteq}}
	    \casetableau {} {Set of files or programs to detect
		configuration modifications on network equipments.
		This package must be installed on your central syslog
		server (for Cisco and Juniper equipments) and your
		central Freeradius server (for HP equipments).
		This package is needed if you plan to run the
		\italique {topo} package.
	    }
	}
	\lignetableau {
	    \casetableau {} {\italique {topo}}
	    \casetableau {} {Backend used to fetch configuration data
		from network equipments, modelize topology in a graph,
		and optionnaly inject new ports configuration to
		equipements. \br
		In order to run properly, this package needs to know
		when a modification of configuration is done on any
		network equipment. This is the role of the \italique
		{detecteq} package.
	    }
	}
	\lignetableau {
	    \casetableau {} {\italique {metro}}
	    \casetableau {} {Backend used to poll equipments for
		metrology information.
	    }
	}
    }

    Packages are designed such as they may be installed on one unique
    server as well as each on its dedicated server, depending on
    your security requirements, performance considerations or site
    specificities.

    \liste {
	\item {a large site may wish to separate all components:
	    \liste {
		\item {the \italique {www} package is installed on a
		    central web hosting platform
		}
		\item {the \italique {database} package is installed on
		    a central database cluster
		}
		\item {the \italique {servers} package is installed on
		    the existing DNS and DHCP server, as well as on mail
		    relay cluster
		}
		\item {the \italique {detecteq} package is installed on
		    both the central syslog server and the central
		    Radius server
		}
		\item {the \italique {topo} package is installed on a
		    dedicated virtual server, for security reasons
		    (access to the network equipements via the
		    administration VLAN)
		}
		\item {the \italique {metro} package is installed on a
		    dedicated physical server for performance and
		    security reasons
		}
	    }
	}
	\item {on the opposite, a small site may wish to run all
	    packages on a unique virtual server.
	}
    }

    The \italique {www} and the \italique {topo} packages must be
    installed on the same architecture (CPU and OS), even if the servers
    are physically distinct.


    \titre {3} {Installing from FreeBSD ports}

    On FreeBSD, Netmagis is integrated in the ports tree, meaning that
    installation may be performed directly from binary packages or by
    compilation from the ports tree.


    \titre {3} {Installing from Debian/Ubuntu packages}

    Linux packages are provided for installing on:
    \liste {
	\item {Ubuntu (minimum distribution is 18.04)}
	\item {Debian (minimum distribution is stretch - stable)}
    }

    Append the following lines to your \teletype {/etc/apt/sources.list}:

    \retrait\teletype {
	deb http://netmagis.org/files/repo stable main \br
	deb-src http://netmagis.org/files/repo stable main
    }

    \gras {Warning: starting from Ubuntu 18.04/Debian stretch, packages
	must be signed. You need to run the following command to add the
	Netmagis signature:

	\retrait\verbatim {
# wget -O - http://netmagis.org/files/netmagis.key | apt-key add  -
}
    }

    If you are using an Ubuntu distribution, check that the "\teletype
    {universe}" section is enabled in \teletype {/etc/apt/sources.list}.

    Now, update your package database:

    \retrait\teletype {
	# apt-get update
    }

    The next step depends upon your architecture:

    \liste {
	\item {If your system is based on an amd64
	    architecture (x86_64 in \teletype "{uname -i}"
	    output), you can install from binary packages (example for
	    the \italique {database} package):

	    \retrait\teletype {
		# apt-get install netmagis-database
	    }

	    \* Since packages are not signed, you must manually answer
	    \* "Yes" to the question "Install these packages without
	    \* verification?".

	}
	\item {If your system is based on another architecture (including
	    i386 for old 32 bit hardware), you have
	    to rebuild from source package:

	    \retrait\teletype {
		# apt-get install dpkg-dev \br
		# apt-get build-dep netmagis \br
		# apt-get source --build netmagis
	    }

	    Once the packages are built, install them with \teletype
	    {gdebi} (example for the \italique {database} package and
	    the \italique {pdp11} architecture):

	    \retrait\teletype {
		# apt-get install gdebi \br
		# gdebi netmagis-database_2.3-1_pdp11.deb
	    }
	}
    }


    \titre {3} {Installing from Netmagis source distribution}

    \enumeration {
    \item {Download the \lien {Netmagis distribution file}
	{/download.html} and unpack the archive:

	\retrait {\teletype {
	    $ tar xzvf netmagis-2.3.0.tar.gz
	}}

	Alternatively, if you are adventurous, you may also fetch the
	current Netmagis sources directly from the \lien {github repository}
	{http://github.com/pdav/netmagis}. Provided that \teletype {git} is
	installed on your system, use this command:

	\retrait {\teletype {
	    $ git clone git@github.com:pdav/netmagis.git
	}}
    }
    \item {Install \lien {required dependencies} {/spec.html}.
	Please note that Tcl is a required dependency for all packages.

	\liste {
	    \item {Linux (Ubuntu/Debian) note:
		\retrait\teletype {
		# common and database \br
		aptitude -y install make git \\ \br
		~ ~ ~ ~ postgresql-9.3 postgresql-pltcl-9.3 libpgtcl1.5  \\ \br
		~ ~ ~ ~ tcl8.5 tcl8.5-dev tcllib tcltls tdom pwgen

		# www \br
		aptitude -y install \ \br
		~ ~ ~ ~ apache2 libaprutil1-dbd-pgsql \\ \br
		~ ~ ~ ~ netpbm texlive-latex-base graphviz transfig

		# topo \br
		aptitude -y install \\ \br
		~ ~ ~ ~ gcc fping rancid default-mta

		# metro \br
		aptitude -y install \\ \br
		~ ~ ~ ~ libsnmp-session-perl libsnmp-perl libnet-snmp-perl librrdtool-oo-perl \\ \br
		    ~ ~ ~ ~  libdbd-pg-perl rrdtool

		# ldap authentication \br
		aptitude -y install openldap-utils slapd
		}
	    }
	\item {Linux (CentOS) note:

		\gras {Warning: these notes for CentOS are obsolete and
		    have not been tested for the current release of
		    Netmagis. Use them at your own risk.

		    Help wanted: if you can, please provide update
		    installation notes for CentOS as an
		    \lien {issue in the Netmagis development site}
		    {https://github.com/pdav/netmagis/issues/new}.
		}

		If you are installing for a CentOS distribution,
		you need to install the \lien {Epel repository}
		{http://mirror.ibcp.fr/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm}
		or to download each package not in CentOS
		repository (such as pwgen, tcllib, etc.) from \lien
		{http://dl.fedoraproject.org/pub/epel/6}{http://dl.fedoraproject.org/pub/epel/6}.

		Then, you can use \teletype {yum} to install dependancies:
		\retrait\teletype {
		# common and database \br
		yum install tcl tcllib pwgen tcl-devel \\ \br
		~ ~ ~ ~ tcl-pgtcl postgresql-server gcc \\ \br
		~ ~ ~ ~ make postgresql-pltcl \br

		# www \br
		yum install httpd apr-util-pgsql mod_ssl

		# topo \br
		yum install rancid fping

		# metro \br
		yum install rrdtool-perl net-snmp-libs net-snmp-perl \\ \br
		~ ~ ~ ~ perl-Net-SNMP net-snmp-libs perl-Digest-HMAC \\ \br
		~ ~ ~ ~ perl-IO-Socket-INET6 perl-Crypt-DES \\ \br
		~ ~ ~ ~ perl-Net-SNMP perl-DBD-Pg
		}

		Then, change the top-level Makefile to suit your environnement:
		\retrait\teletype {
		TCLSH = /usr/bin/tclsh \br
		TCLCONF = /usr/lib64/tcl8.5/tclConfig.sh \br
		}
	    }
	}
    }
    \item {Choose an installation directory. You may use \teletype
	{/local/netmagis/} for example. Netmagis's Makefile will install a
	hierarchy such as:

	\tableau {
	    \* \taille {100}
	    \bordure {1} {}
	} {
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	} {
	    \lignetableau {
		\casetableau {} {.../etc/}
		\casetableau {} {various configuration files}
	    }
	    \lignetableau {
		\casetableau {} {.../bin/}
		\casetableau {} {programs which should be called as an ordinary
		    user}
	    }
	    \lignetableau {
		\casetableau {} {.../sbin/}
		\casetableau {} {programs which should be called as the root
		    user}
	    }
	    \lignetableau {
		\casetableau {} {.../lib/}
		\casetableau {} {libraries, messages, and programs which are
		    not meant to be called by humans}
	    }
	    \lignetableau {
		\casetableau {} {.../share/}
		\casetableau {} {examples, default configuration files,
		    database upgrade scripts, etc. NB: on
		    Debian/Ubuntu, examples files are in
		    /usr/share/doc/netmagis/examples/}
	    }
	    \lignetableau {
		\casetableau {} {.../var/}
		\casetableau {} {files generated by \italique {topo} or
		    \italique {metro} packages}
	    }
	    \lignetableau {
		\casetableau {} {.../www/}
		\casetableau {} {Web application (installed by \italique
		    {www} package)}
	    }
	}

    }
    \item {Modify the top-level Makefile variables to suit your choices:
	\tableau {
	    \* \taille {100}
	    \bordure {1} {}
	} {
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	} {
	    \lignetableau {
		\casetableau {} {DESTDIR}
		\casetableau {} {Installation directory}
	    }
	    \lignetableau {
		\casetableau {} {TCLSH}
		\casetableau {} {Full path name of tclsh interpreter}
	    }
	    \lignetableau {
		\casetableau {} {TCLCONF}
		\casetableau {} {Tcl configuration script
		    (example: \teletype {/usr/lib/tcl8.5/tclConfig.sh} on Linux or \teletype {/usr/local/lib/tcl8.5/tclConfig.sh} on FreeBSD)}
	    }
	}

    }
    \item {Install the \italique {package}:
	\retrait{\teletype {
	    # make install-common
	}}
    }
    \item {Install the desired package(s). For example, if you want to
	install the \italique {database}, \italique {www} and the
	\italique {utils}
	packages, type:
	\retrait{\teletype {
	    # make install-database \br
	    # make install-www \br
	    # make install-utils
	}}
    }
    }

    That's it! You may now proceed to initial configuration.

    \**********************************************************************

    \titre {2} {Initial PostgreSQL configuration}

    On the host where you installed the \italique {database} package,
    you should have a PostgreSQL server. The recommanded version is at
    least 9.1.

    You have to check that your PostgreSQL installation allow connections
    (and authenticate users with password) from hosts which act as
    clients of the Netmagis database (all hosts where you installed
    a netmagis package). This is usually configured in file \teletype
    {pg_hba.conf} which is located in:
    \tableau {
	\* \taille {100}
	\bordure {1} {}
    } {
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
    } {
	\lignetableau {
	    \casetableau {} {FreeBSD}
	    \casetableau {} {\teletype
		{&tilde;pgsql/data/pg_hba.conf}
		(where \teletype {pgsql} is the name of the PostgreSQL
		administror)}
	}
	\lignetableau {
	    \casetableau {} {Linux (Debian/Ubuntu)}
	    \casetableau {} {
		\teletype {/etc/postgresql/9.1/main/pg_hba.conf}
	    }
	}
    }

    Netmagis relies on password authentication, even if the database is
    on localhost, so the "ident" method won't work. You should change
    the configuration in pg_hba.conf to look like this:
        \retrait{\teletype {
		host    all             all             127.0.0.1/32            md5\br
		host    all             all             ::1/128                 md5
        }}


    Netmagis uses only one PostgreSQL user, without special privilege
    (except database creation privilege).
    You must create it (as the PostgreSQL administor user: \teletype
    {pgsql} on FreeBSD, \teletype {postgres} on Linux) with the
    PostgreSQL \teletype {createuser} program:

    \retrait\teletype {createuser --no-superuser --no-createrole --createdb --pwprompt nm}

    Even if you want to use a different database for the \italique
    {mac} package, you can use the same user.

    \**********************************************************************

    \titre {2} {The Netmagis configuration file}

    The Netmagis configuration file is located in \teletype
    {.../etc/netmagis.conf} on each host where a Netmagis package
    is installed.  The \italique {common} package does not install
    this file (in order to leave your file intact if you previousely
    installed Netmagis), but it installs a copy in \teletype
    {.../etc/netmagis.conf.sample}. Copy it manually to \teletype
    {.../etc/netmagis.conf} and edit it.

    The following table list only directives you would want to modify
    for a fresh installation.

    \retrait {
    \tableau {
	\taille {100}
	\bordure {1} {}
    } {
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
    } {
	\lignetableau {
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	}
	\lignetableau {
	    \casetableau {} {dnsdb...}
	    \casetableau {} {Information needed to connect to the
		PostgreSQL server, with an unprivileged user (see below).
	    }
	}
	\lignetableau {
	    \casetableau {} {macdb...}
	    \casetableau {} {Information needed to connect to the
		PostgreSQL server for the \italique {mac} package,
		with an unprivileged user. If you don't want to use
		a separate database, or if you don't want to use the
		\italique {mac} package, use exactly the same values
		as for the the \teletype {dnsdb...} parameters.
	    }
	}
	\lignetableau {
	    \casetableau {} {ouiurl}
	    \casetableau {} {URL to the OUI database (a default
		value is provided in the sample configuration file). This
		is necessary to populate the mac.oui table with Ethernet
		vendor prefixes when the mac database is created.
	    }
	}
	\lignetableau {
	    \casetableau {} {cafile}
	    \casetableau {} {Path to the file containing the root
		certificate authorities. Usually
		\teletype {/usr/local/share/certs/ca-root-nss.crt} on
		FreeBSD and
		\teletype {/etc/ssl/certs/ca-certificates.crt}
		on Linux (Debian/Ubuntu).
	    }
	}
	\lignetableau {
	    \casetableau {} {whoami}
	    \casetableau {} {Command used to get login name of the user
		who is running the current program. It should display
		exclusively the login name. Default value is suitable
		for FreeBSD and Ubuntu.
	    }
	}
	\lignetableau {
	    \casetableau {} {rootusers}
	    \casetableau {} {Login names of Netmagis users allowed to
		access the application even when it is in "maintenance mode".
	    }
	}
    }
    }

    Use the script \teletype {netmagis-config} (check your PATH) to
    test that Netmagis understands your modifications. The command:
    \retrait\teletype {$ netmagis-config dnsdbhost}
    should display a string such as:
    \retrait\teletype {dnsdbhost="myhost.example.com"}

    You can now proceed to database installation.

    \**********************************************************************

    \titre {2} {Database installation}

    PostgreSQL server should be initialized as described
    above. Netmagis should then be installed by providing
    \teletype {.../etc/netmagis.conf} directives:

    \retrait {
    \tableau {
	\taille {100}
	\bordure {1} {}
    } {
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
    } {
	\lignetableau {
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	}
	\lignetableau {
	    \casetableau {} {dbcopy}
	    \casetableau {} {Name of a copy of the Netmagis database,
		generated every night (see the \teletype {netmagis-dbmaint}
		program in the \italique {database} package). This copy
		lets you experiment and work on data without fear. \br
		If this directive is empty, the maintenance command
		will not create a copy of the database.
	    }
	}
	\lignetableau {
	    \casetableau {} {dumpdir}
	    \casetableau {} {Directory where the \teletype {netmagis-dbmaint}
		program stores periodic backups of the database.
	    }
	}
	\lignetableau {
	    \casetableau {} {pwgen}
	    \casetableau {} {Command line to generate a random password}
	}
    }
    }

    \liste {
    \item {
	If you are upgrading from a previous WebDNS or Netmagis installation,
	please see the \lien {upgrade instructions} {upgrade.html}.
    }
    \item {
	If you are installing Netmagis for the first time, after you
	configured the \teletype {netmagis.conf} file, run the command
	\retrait\teletype {$ .../sbin/netmagis-dbcreate}
	This command:
	\liste {
	    \item {creates the Netmagis database (it fails if the database
		is already created)}
	    \item {creates the MAC database if it is different from the
		main Netmagis database (it fails if the database
		is already created)}
	    \item {creates the SQL schemas, tables, functions and triggers}
	    \item {provides default values for Netmagis directives}
	    \item {creates Netmagis users listed in \teletype {rootusers}
		directive (in \teletype {.../etc/netmagis.conf} file)
	    }
	    \item {creates a Netmagis user called \teletype {nobody}}
	    \item {assigns all Netmagis users a random password, and
		displays them on standard output}
	}
	Users are created in the Netmagis database, including the
	internal authentication schema.
	\liste {
	    \item {if you use an LDAP or CAS authentication, \teletype
		{rootusers} users should exist in your LDAP directory.}
	    \item {if you plan to use the internal authentication database,
		note the generated passwords as they will be needed in the
		Web application installation}
	}
    }
    \item {Unless you are upgrading from previous versions, you should
	import your data into the database. Doing so is described in
	the section below.

	Since this is a long task, if you want to test your installation,
	you may try to import example data.  You may do so by issuing
	the command to load the multi-views example (you can load the
	\teletype {no-view} example instead):
	\retrait\teletype {$ dropdb --username=nm netmagis \br
	    $ cd .../share/examples/netmagis/with-views \br
	    $ sh ./run-all.sh
	}

	You can later destroy and re-create the database with your
	own data.
    }
    \item {Install the sample crontab (\teletype
	{.../share/examples/netmagis/crontab.database}) in your default
	cron system. This crontab can be run by any unprivileged Unix user,
	provided that this user has write access to the dump directory
	(see the \teletype {dumpdir} directive above).

	FreeBSD users: if you install this crontab in the global \teletype
	{/etc/crontab}, please provide a user name just before the
	command name.

	The \teletype {.../sbin/netmagis-dbmaint} command performs some
	maintenance tasks:
	\liste {
	    \item {make a hourly backup of database in the directory
		named in the \teletype {dumpdir} directive from
		\teletype {.../etc/netmagis.conf}
	    }
	    \item {copy the current database in a copy named after the
		\teletype {dbcopy} directive
	    }
	    \item {performs a PostgreSQL vacuum operation}
	    \item {remove some old entries in Netmagis internal spools}
	}
    }
    }

    Netmagis database is now installed. You may now install the
    \italique {www} package.

    \**********************************************************************

    \titre {2} {Web application installation}

    To store user accounts, the Web application can use either an existing
    external LDAP directory or the internal PostgreSQL database.

    \retrait {
    \tableau {
	\taille {100}
	\bordure {1} {}
    } {
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
    } {
	\lignetableau {
	    \multicasetableau {2} {\centragehorizontal {CENTER}}
		{\gras {netmagis.conf directives}}
	}
	\lignetableau {
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	}
	\lignetableau {
	    \casetableau {} {passwdurl}
	    \casetableau {} {URL which should be displayed to let users
		change their password, if you use an external LDAP
		authentication. Leave empty if you use internal
		PostgreSQL authentication.}
	}
	\lignetableau {
	    \casetableau {} {hostcmd}
	    \casetableau {} {Path to the \teletype {host} command}
	}
	\lignetableau {
	    \casetableau {} {pwgen}
	    \casetableau {} {Command line to generate a random password
		(not used for LDAP and CAS authentication)
	    }
	}
	\lignetableau {
	    \casetableau {} {random}
	    \casetableau {} {Device name of the non-blocking
		pseudo-random generator
	    }
	}
    }
    }

    \liste {
    \item {A default Apache configuration file is provided in
	\teletype {..../share/examples/netmagis/httpd.conf}.  Adapt this
	file to your site and include it in your Apache configuration.
    }
    \item {Now, direct your Web browser to the \teletype
	{http://yourhost/netmagis/index}, and connect with your login name,
	using the password generated by the \teletype {netmagis-dbcreate}
	command during the database creation phase.

	You should see a main menu such as \lien {this one}
	{http://netmagis.org/shot-index.png}.
    }
    \item {If you are using internal (PostgreSQL based) Netmagis
	authentication, change your password (unless you want to keep
	the generated one).

	Change also your name (as well as other account informations)
	with the \gras {Admin} / \gras {Internal Auth} / \gras {Modify
	account} menu.
    }
    \item {If you are using the LDAP based authentication, go into the
	\gras {Admin} menu (on the left vertical bar), then to the \gras
	{Application parameters} menu.

	\liste {
	    \item {In the "\gras {LDAP parameters}" section, adapt values
		to your LDAP directory.
	    }
	    \item {Then select the \gras {LDAP} item in the \gras
		{Authentication method} menu (in the "\gras {General
		parameters}" section).
	    }
	    \item {Then, click on the \gras {Submit} button to register
		your new configuration.
	    }
	    \item {Log out, or better, use an alternate browser to log
		in, in order to check that your authentication parameters
		are correctly configured.
	    }
	}

	If some of the LDAP parameters are erroneous, you will not be
	able to log in. To recover from this state, use the following
	command to reset the authentication method:

	\retrait\teletype {$ psql -U nm -c "UPDATE global.config SET value = 'pgsql' WHERE key = 'authmethod'" netmagis
	}
    }
    \item {If you are using the CAS based authentication, go into the
	\gras {Admin} menu (on the left vertical bar), then to the \gras
	{Application parameters} menu.

	\liste {
	    \item {Adapt the "\gras {CAS authentication parameters}"
		section.
	    }
	    \item {Next, adapt the "\gras {LDAP parameters}" section
		as explained in the previous item (LDAP based
		authentication).
	    }
	    \item {Then select the \gras {CAS} item in the \gras {Authentication
		method} menu (in the "\gras {General parameters}" section).
	    }
	    \item {Then, click on the \gras {Submit} button to register
		your new configuration.
	    }
	    \item {Log out, or better, use an alternate browser to log
		in, in order to check that your authentication parameters
		are correctly configured.
	    }
	}

	If some of the LDAP or CAS parameters are erroneous, you will not
	be able to log in. To recover from this state, use the
	following command to reset the authentication method:

	\retrait\teletype {$ psql -U nm -c "UPDATE global.config SET value = 'pgsql' WHERE key = 'authmethod'" netmagis
	}
    }
    }

    Congratulations! The Web application is now installed.

    \**********************************************************************

    \titre {2} {Import your existing data}

    Your next task is to \lien {feed your database with referential data}
    {import-2.3.html} (users, groups, networks, etc.) as well as your existing
    DNS zones if any.

    \**********************************************************************

    \titre {2} {Configuring Netmagis}

    Documentation about common tasks in Netmagis configuration is provided
    in a \lien {separate page} {config-netmagis.html}.

    \**********************************************************************

    \titre {2} {Utils package installation}

    The \italique {utils} package is optional: it contains commands
    to add, delete or modify individual hosts, as well as DNS zone
    prologues. These commands are designed to be used wth the Unix shell.

    Installation is very simple: only common \teletype {netmagis.conf}
    directives to connect to the database are needed.

    Notice, however, that this file (including password to connect to
    the database) must be readable to all users of these scripts. This
    may be a security risk if you make this file readable for all users,
    but you can also control access to the configuration file and to
    the scripts based on a group policy.

    The provided commands are:
    \liste {
    \item {\teletype {dnsaddhost \italique {fqdn addr view}}: adds the
	specified host with the IPv4 or IPv6 address.
    }
    \item {\teletype {dnsaddalias \italique {fqdn-alias fqdn-host view}}:
	adds the specified alias to an existing host.
    }
    \item {\teletype {dnsdelhost \italique {fqdn view}}: deletes the
	specified host or alias.
    }
    \item {\teletype {dnsdelip \italique {addr view}}: deletes an IP address.
	If this is the last, deletes the host.
    }
    \item {\teletype {dnsmodattr \italique {fqdn view key val key val ...}}:
	modify an existing host. Possibles keys are:
	\liste {
	    \item {\teletype {mac}: value is the MAC address
	    }
	    \item {\teletype {hinfo}: value is the exact name of the
		the machine type, as listed
		in the \gras {Modify machine types} administrator menu.
		or in the
		\teletype {dns.hinfo} SQL table

	    }
	    \item {\teletype {respname}: name of user responsible for
		this host
	    }
	    \item {\teletype {respmail}: mail address of user responsible
		for this host
	    }
	    \item {\teletype {comment}: comment associated to this
		host
	    }
	    \item {\teletype {dhcpprofile}: value is the exact name of
		the DHCP profile, as listed
		in the \gras {Modify DHCP profiles} administrator menu.
		or in the
		\teletype {dns.dhcpprofile} SQL table
	    }
	    \item {\teletype {ttl}: value is the specific TTL value for
		this host, in seconds, or empty string to remove the
		specific value
	    }
	    \item {\teletype {sendsmtp}: value is 0 to remove the right
		to emit mail with unauthenticated SMTP, or 1 to add the
		right.
	    }
	}
    }
    \item {\teletype {dnsreadprol \italique {zone view}}: displays on
	standard output the DNS zone prologue specified by its domain
	name.
    }
    \item {\teletype {dnswriteprol \italique {zone view file}}: use the named
	file as the zone prologue. Since this operation may have a great
	impact, manual confirmation is required.
    }
    }

    With all these commands, you have to provide a view name. If you don't
    use multiple views, just use the name "\teletype {default}".

    Note that users using this script must have a Netmagis account
    with the same login as the Unix one.


    \**********************************************************************

    \titre {2} {Servers package installation}

    The \italique {servers} package must be installed on your main BIND
    server, on your DHCP server, and on your mail router, depending on
    the features you want.

    \titre {3} {On all servers}

    On all servers, you will have to configure \teletype
    {.../etc/netmagis.conf} with the following directive:

	\tableau {
	    \taille {100}
	    \bordure {1} {}
	} {
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	} {
	    \lignetableau {
		\multicasetableau {2} {\centragehorizontal {CENTER}}
		    {\gras {netmagis.conf directives}}
	    }
	    \lignetableau {
		\casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
		\casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	    }
	    \lignetableau {
		\casetableau {} {diff}
		\casetableau {} {Command line used to signal differences
		    between two versions of a server file (DNS zones,
		    DHCP files, etc.).
		}
	    }
	}


    \titre {3} {BIND server}

    On your \gras {main BIND server}, provide values for the
	following directives:

	\tableau {
	    \taille {100}
	    \bordure {1} {}
	} {
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	} {
	    \lignetableau {
		\multicasetableau {2} {\centragehorizontal {CENTER}}
		    {\gras {netmagis.conf directives}}
	    }
	    \lignetableau {
		\casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
		\casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	    }
	    \lignetableau {
		\casetableau {} {zonedir}
		\casetableau {} {Directory where your DNS zone files are
		    read by your DNS daemon
		}
	    }
	    \lignetableau {
		\casetableau {} {zonecmd}
		\casetableau {} {Command used to make your DNS daemon reload
		    the generated zone files. The default command is for
		    BIND 9.x.

		    Please note that if this command fails, zone
		    generation is aborted and old zone files are restored.

		    If you have configured a cluster of name servers,
		    you can use this directive to propagate inforamtion
		    to other nodes.
		}
	    }
	}

    Once you configured \teletype {.../etc/netmagis.conf} file, run
    (as the user who have access to the \teletype {zonedir} directory
    and to the \teletype {zonecmd} command):
    \retrait\teletype {$ .../sbin/mkzone -n -v}
    This command tests zone generation, without performing any file
    modification.

    You can force generation of some zones by using the \gras {Admin}
    / \gras {Force zone generation}. This sets a flag in the \teletype
    {dns.zone} SQL table, which is read by the \teletype {mkzone} to
    find modified zones.

    Test now a real zone generation by using:
    \retrait\teletype {$ .../sbin/mkzone -v}

    Each zone file will be named after the "Name" column in zone edition.

    If you are using multiple views on different DNS servers, you
    can use the \teletype {-w \italique {view}} option to limit zone
    generation to a single view. By default, the \teletype {mkzone}
    program generates zone files for all views.

    If everything is ok, you can use the sample \teletype
    {.../share/examples/netmagis/crontab.bind} to install the periodic
    zone generation for the user.

    An usual convention about the SOA serial number is to use a
    number of the form "\italique {yyyymmddnn}" where \italique
    {yyyymmdd} is the current date and \italique {nn} is a sequence
    number for this date. Netmagis uses this convention when possible,
    but if there is more than 100 modifications in a day, it will
    simply increment the value. Our algorithm will automagically
    synchronizes again with the convention when possible.
    This way, you can run the \teletype {mkzone} script every minute
    without fear.

    FreeBSD users: if you install this crontab in the global \teletype
    {/etc/crontab}, please provide a user name just before the command
    name.

    \titre {3} {ISC DHCP Server}

    Netmagis is designed to aliment a central \lien {ISC DHCP server}
    {http://www.isc.org/software/dhcp}.  If you want to use this
    functionnality on other networks, you need to activate DHCP relay
    in your router configurations.

    The Netmagis can also handle \gras {failover} configuration in order
    to provide a redundant DHCP service based on 2 ISC DHCP servers.

    On your \gras {DHCP server}, provide values for the following
    directives:

	\tableau {
	    \taille {100}
	    \bordure {1} {}
	} {
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	} {
	    \lignetableau {
		\multicasetableau {2} {\centragehorizontal {CENTER}}
		    {\gras {netmagis.conf directives}}
	    }
	    \lignetableau {
		\casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
		\casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	    }
	    \lignetableau {
		\casetableau {} {dhcpfile}
		\casetableau {} {Location of generated file for ISC dhcpd
		    daemon. This file should be included by your main
		    \teletype {dhcpd.conf} file (see you ISC dhcpd
		    configuration), with a line such as:
		    \retrait\teletype {include "/etc/dhcp-gen.conf"}

		    Note: if you don't plan to use DHCP generation,
		    don't panic! This directive (and the next ones) will
		    not be used.
		}
	    }
	    \lignetableau {
		\casetableau {} {dhcpfailover}
		\casetableau {} {Line to add to generated pools if you use
		    ISC DHCP failover feature (DHCP redundancy over 2
		    servers). Leave empty if you don't use this feature.
		}
	    }
	    \lignetableau {
		\casetableau {} {dhcptest}
		\casetableau {} {Command used to check DHCP configuration
		    file before restarting ISC dhcpd daemon. This is needed
		    since Netmagis administrators may add faulty DHCP
		    profiles, and ISC dhcpd daemon is not very tolerant to
		    configuration errors. Please note that this command
		    contains the location of your main teletype {dhcpd.conf}
		    file.
		}
	    }
	    \lignetableau {
		\casetableau {} {dhcpcmd}
		\casetableau {} {Command used to make your ISC dhpcd daemon
		    reload the configuration.
		}
	    }
	}

    Once you configured \teletype {.../etc/netmagis.conf} file, run
    as root:
    \retrait\teletype {$ .../sbin/mkdhcp -n -v}
    This command tests DHCP file generation, without performing any
    file modification.

    Test now a real DHCP file generation by using:
    \retrait\teletype {$ .../sbin/mkdhcp -v}

    If you are using multiple views, you need to supply a specific view
    for which you are generating a DHCP file, with the \teletype {-w}
    option:
    \retrait\teletype {$ .../sbin/mkdhcp -v -w internal}
    By default, the \teletype {mkdhcp} program generates a DHCP file
    for all views, which is certainly not what you want if you are using
    multiple views.

    If everything is ok, you can use the sample \teletype
    {.../share/examples/netmagis/crontab.dhcp} to install the periodic
    DHCP file generation. You should run the DHCP file generation
    soon after the DNS zone generation (such that new host names
    are not generated in DHCP file before they are known in the DNS).

    FreeBSD users: if you install this crontab in the global \teletype
    {/etc/crontab}, please provide a user name just before the
    command name.

    \titre {3} {Mail relay cluster}

    Netmagis can be used to generate mail routes for you central
    mail router. Routes are generated following "mail roles", whose
    modifications are enabled individually for each allowed domain in
    the \gras {Admin} / \gras {Modify users and groups} menu.

	\tableau {
	    \taille {100}
	    \bordure {1} {}
	} {
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	    \casedefauttableau {
		\centragehorizontal {LEFT}
		\centragevertical {MIDDLE}
	    }
	} {
	    \lignetableau {
		\multicasetableau {2} {\centragehorizontal {CENTER}}
		    {\gras {netmagis.conf directives}}
	    }
	    \lignetableau {
		\casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
		\casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	    }
	    \lignetableau {
		\casetableau {} {mroutefile}
		\casetableau {} {File read by sendmail (or Postfix)
		    to get mail routing information. The default line format
		    (see "mroutefmt" directive) ressembles:
		    \retrait {\teletype {specific.domain.com
		    smtp.[host.domain.com]}}
		    which means that mail addressed to
		    someone@specific.domain.com is to be sent to host
		    host.domain.com.

		    Note: if you don't plan to use mail route generation,
		    don't panic! This directive (and the next ones) will
		    not be used.
		}
	    }
	    \lignetableau {
		\casetableau {} {mrouteprologue}
		\casetableau {} {Prologue of the generated mail route file.
		    This prologue allows you to mention specific mail route
		    information which cannot be extracted from the database.
		}
	    }
	    \lignetableau {
		\casetableau {} {mroutefmt}
		\casetableau {} {Format of mail route entries: %1$s is the
		    mail address and %2$s is the host accepting mails for
		    this address.
		}
	    }
	    \lignetableau {
		\casetableau {} {mroutecmd}
		\casetableau {} {Command used to make your Sendmail daemon
		    reload the generated route file.

		    If your mail router is a cluster of hosts, this
		    command will have to propagate the file and restart
		    the daemon on other nodes.
		}
	    }
	}

    Once you configured \teletype {.../etc/netmagis.conf} file, run
    as root:
    \retrait\teletype {$ .../sbin/mkmroute -n -v}
    This command tests mail routes file generation, without performing
    any file modification.

    Test now a real file generation by using:
    \retrait\teletype {$ .../sbin/mkmroute -v}

    If you are using multiple views, you need to supply a specific view
    for which you are generating mail routes, with the \teletype {-w}
    option:
    \retrait\teletype {$ .../sbin/mkmroute -v -w internal}
    By default, the \teletype {mkmroute} program generates a routes
    for all views, which is certainly not what you want if you are
    using multiple views. For example, if you have a mail role \teletype
    {sales.example.com} (in view external) which points to a mailbox
    host named {server.example.com} (in view internal), chances are that
    your mail router "sees" the "internal" view (otherwise, it could
    not route mail to \teletype {server.example.com}). Thus, you have
    to specify:
    \retrait\teletype {$ .../sbin/mkmroute -v -w internal}

    If everything is ok, you can use the sample \teletype
    {.../share/examples/netmagis/crontab.mroute} to install the
    periodic file generation.

    FreeBSD users: if you install this crontab in the global \teletype
    {/etc/crontab}, please provide a user name just before the
    command name.

    \titre {3} {Authenticated SMTP filtering}

    If you use authenticated SMTP, you know than some hosts (copiers,
    embedded measurement machines, etc.) may not be able to use
    authenticated SMTP. Some exceptions must be done.

    Netmagis helps you handle these exceptions, by providing a special
    flag to each host.  Right to activate this flag is enabled for each
    group in the \gras {Admin} / \gras {Modify users and groups} menu.

    To activate this functionnality, some prerequisites are needed
    on your mail infrastructure:
    \liste {
	\item {Authenticated SMTP message submission is enabled on
	    TCP port 587
	}
	\item {Unauthenticated SMTP access is enabled on TCP port
	    25
	}
	\item {All your routers restrict use of port 25, such as
	    internal hosts can only open connections to mail
	    submission hosts
	}
	\item {Your mail submissions hosts accept connections on
	    port 25 only from authorized hosts. \br
	    A configuration file for a *BSD PF (packet filter)
	    is provided as an example in
	    \teletype {.../share/examples/netmagis/pf.conf.sample}.
	    You will notice that the \gras {smtpf} table is read
	    from a file, generated by Netmagis.
	}
    }

    With this infrastructure, provide values for the following
    directives on your mail submission hosts:

    \tableau {
	\taille {100}
	\bordure {1} {}
    } {
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
	\casedefauttableau {
	    \centragehorizontal {LEFT}
	    \centragevertical {MIDDLE}
	}
    } {
	\lignetableau {
	    \multicasetableau {2} {\centragehorizontal {CENTER}}
		{\gras {netmagis.conf directives}}
	}
	\lignetableau {
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
	    \casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
	}
	\lignetableau {
	    \casetableau {} {pffile}
	    \casetableau {} {File where the PF packet filter (on *BSD
		hosts) expects to find the contents of the table giving
		IP addresses of hosts allowed to use unauthenticated
		SMTP, i.e. hosts allowed to connect to TCP port 25.

		Note: if you don't plan to use Netmagis to control
		which hosts have access to unauthenticated SMTP, don't
		panic! This directive (and the next ones) will not
		be used.
	    }
	}
	\lignetableau {
	    \casetableau {} {pffmt}
	    \casetableau {} {Format of generated file (containing
		the \gras {smtpf} table) included in \teletype
		{pffile}}
	}
	\lignetableau {
	    \casetableau {} {pfprologue}
	    \casetableau {} {Lines to prepend, if any, to the
		generated file. May be set to \teletype {/dev/null}
	    }
	}
	\lignetableau {
	    \casetableau {} {pftest}
	    \casetableau {} {Command used to check the generated file}
	}
	\lignetableau {
	    \casetableau {} {pfcmd}
	    \casetableau {} {Command used to reload the generated pf table}
	}
    }

    Once you configured \teletype {.../etc/netmagis.conf} file, run
    as root:
    \retrait\teletype {$ .../sbin/mksmtpf -n -v}
    This command tests filter file generation, without performing
    any file modification.

    Test now a real file generation by using:
    \retrait\teletype {$ .../sbin/mksmtpf -v}

    As with \teletype {mkmroute}, you can use the \teletype {-w \italique
    {view}} option to specify a particular view.

    If everything is ok, you can use the sample \teletype
    {.../share/examples/netmagis/crontab.smtpf} to install the
    periodic file generation.

    FreeBSD users: if you install this crontab in the global \teletype
    {/etc/crontab}, please provide a user name just before the
    command name.

    Congratulations! You have installed the \italique {servers} package.
    The Netmagis is ready to be used, for its core functionnality.

    \**********************************************************************

    \titre {2} {Detecteq package installation}

    The \italique {topo} package needs to know when the configuration
    of a network equipment has been changed. These changes are detected
    via:
    \liste {
	\item {\gras {syslog} for Cisco and Juniper equipments}
	\item {\gras {radius accounting} for HP equipements. In this
	    case, since HP equipments are unable to report configuration
	    changes via Syslog, the hack is based on Radius accounting
	    which detects user logout (which do not strictly imply a
	    configuration change).
	}
    }

    Thus, the \italique {detecteq} package must be installed on your
    central syslog (syslog, syslog-ng, etc.) server and/or your central
    radius server, depending on your equipments. Since modification
    events are sent to the database, the \italique {detecteq} package
    does not need to be installed on the same server as the \italique
    {topo} server.

    \titre {3} {Network equipment configuration}

    In order to automate configuration fetching from a central server,
    a unique user should be defined on every network equipment. Let us
    call it \gras {conf}. This user should have the right to execute the
    \teletype {show configuration} commmand (or similar), which means
    it must have the "admin" privilege.

    Moreover, at least on HP equipments, there should be another distinct
    user (let us call it \gras {modconf}) which should be able to modify
    the configuration in order to change interface characteristics. This
    second user is needed for Radius to distinguish regular configuration
    fetching from configuration modification.

    \titre {3} {Syslog configuration}

    \liste {
	\item {On Cisco and Juniper equipments, you need to configure a
	    syslog server if not already done. For example:

	    \tableau {
		\* \taille {100}
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Equipment}}
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Example}}
		}
		\lignetableau {
		    \casetableau {} {Juniper}
		    \casetableau {} {\teletype {system \{ \br
			~ ~ syslog \{ \br
			~ ~ ~ ~host \italique {syslog-server.example.com} \{ \br
			~ ~ ~ ~ ~ ~any notice;\br
			~ ~ ~ ~ ~ ~facility-override local2;\br
			~ ~ ~ ~\}\br
			~ ~ \}\br
			\}
			}}
		}
		\lignetableau {
		    \casetableau {} {Cisco}
		    \casetableau {} {\teletype
			{logging \italique {syslog-server.example.com}\br
			logging facility local2}
		    }
		}
	    }
	}
	\item {Configure \teletype {.../etc/netmagis.conf} for access to
	    the Netmagis database
	}
	\item {Update your syslog configuration file and use a line
	    such as:
	    \retrait\teletype {local2.*  |exec /usr/local/sbin/detectconfmod}

	    Adapt this line to your syslog facility and the \italique
	    {detecteq} installation path.  You can also use other
	    syslog daemons such as syslog-ng if they provide the "pipe
	    to program" functionnality.

	    Note: on Linux (Debian/Ubuntu), the default syslog program
	    (\teletype {rsyslogd}) does not support the "pipe to program"
	    functionnality. An alternative is to install the \teletype
	    {syslog-ng} package and configure it with lines such as:
	    \retrait\teletype {
		source remote \{ \br
		~ ~ udp(port(514)); \br
		\}

		filter myequip \{ \br
		~ ~ netmask ("10.20.30.0/24"); \br
		\};

		destination mylogs \{ \br
		~ ~ file ("/var/log/myeq.log"); \br
		\};

		destination detectconfmod \{ \br
		~ ~ program ("/usr/local/sbin/detectconfmod"); \br
		\};

		log \{ \br
		~ ~ source(remote); \br
		~ ~ filter(myequip); \br
		~ ~ destination(detectconfmod); \br
		~ ~ destination(mylogs); \br
		~ ~ flags(final); \br
		\}
	    }
	}
	\item {Be sure to keep hostnames in generated logs. You should
	    get lines such as (example on a Cisco switch):\br
	    \retrait\teletype {Dec 23 11:52:26 \gras {adm-sw}
		%SYS-5-CONFIG_I:
		Configured from console by joe on vty0 (192.168.1.1)}
	}
    }

    \titre {3} {Freeradius configuration}

    \liste {
	\item {On HP equipements, configure Radius accounting using the
	    following command:

	    \tableau {
		\* \taille {100}
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Equipment}}
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Example}}
		}
		\lignetableau {
		    \casetableau {} {HP}
		    \casetableau {} {\teletype
			{radius-server host \italique {radius.example.com}
			    key \italique {secret}
			    acct-port 1813
			    }
		    }
		}
	    }

	}
	\item {Configure your existing Freeradius using the SQL
	    accounting module and the example files provided in
	    \teletype {.../share/examples/netmagis/radius/} directory.
	    \teletype { \br
		~ sql \{ \br
			~ ~ database = "postgresql" \br
			~ ~ driver = "rlm_sql_$\{database\}" \br
			~ ~ server = "mydatabaseserver.example.com" \br
			~ ~ login = "nmdetecteq" \br
			~ ~ password = "mysecret1234" \br
			~ ~ radius_db = "netmagis" \br
			~ ~ sqltrace = no \br
			~ ~ sqltracefile = $\{logdir\}/sqltrace.sql \br
			~ ~ num_sql_socks = 5 \br
			~ ~ connect_failure_retry_delay = 60 \br
			~ ~ lifetime = 0 \br
			~ ~ max_queries = 0 \br
			~ ~ sql_user_name = "%\{User-Name\}" \br
			~ ~ nas_query = "" \br
			~ ~ authorize_check_query = "" \br
			~ ~ authorize_reply_query = "" \br
			~ ~ authorize_group_check_query = "" \br
			~ ~ authorize_group_reply_query = "" \br
			~ ~ accounting_onoff_query = "" \br
			~ ~ accounting_update_query = "" \br
			~ ~ accounting_update_query_alt = "" \br
			~ ~ accounting_start_query = "" \br
			~ ~ accounting_start_query_alt  = "" \br
			~ ~ accounting_stop_query = " \\ \br
				~ ~ ~ ~ INSERT INTO topo.modeq (eq,login) \\ \br
				~ ~ ~ ~			( \\ \br
				~ ~ ~ ~	~			SELECT rr.name || '.' || domain.name, \\ \br
				~ ~ ~ ~	~				'%\{User-Name\}' \\ \br
				~ ~ ~ ~	~			FROM dns.rr, dns.rr_ip, dns.domain \\ \br
				~ ~ ~ ~	~			WHERE rr_ip.idrr = rr.idrr AND \\ \br
				~ ~ ~ ~	~ ~				rr.iddom = domain.iddom AND \\ \br
				~ ~ ~ ~	~ ~				rr_ip.addr = '%\{NAS-IP-Address\}' AND \\ \br
				~ ~ ~ ~	~				'%\{User-Name\}' NOT IN ( \\ \br
				~ ~ ~ ~	~ ~ ~					SELECT login \\ \br
				~ ~ ~ ~	~ ~ ~					FROM topo.ignoreequsers) \\ \br
				~ ~ ~ ~			) \\ \br
				~ ~ ~ ~		" \br
			~ ~ accounting_stop_query_alt = "" \br
			~ ~ group_membership_query = "" \br
			~ ~ postauth_query = "" \br
		~ \} \br
	   }
	}
	\item {As described above, the Radius accounting server needs
	    to distinguish regular configuration fetching from
	    configuration modification. This is done using the \teletype
	    {topo.ignoreequsers} table which contains login names of
	    the users to ignore.

	    The default user is named \gras {conf}. If want to change
	    names of users which perform read-only (i.e. fetch)
	    operations, issue the following SQL commands with \teletype
	    {psql}:
	    \retrait\teletype {
		DELETE FROM topo.ignoreequsers; \br
		INSERT INTO topo.ignoreequsers VALUES ('joe'); \br
		INSERT INTO topo.ignoreequsers VALUES ('bill');
	    }
	}
    }

    \**********************************************************************

    \titre {2} {Topo package installation}

    One of the most innovative parts of Netmagis is the \italique {topo}
    package, which provides a complete infrastructure to fetch and analyze
    network equipments configuration files and modelize the network as
    a graph. This allows for automatic generation of network L2 and L3
    maps, equipment port configuration, as well as interactions with
    the metrology package.

    At this time, Juniper, Cisco and HP equipments (switches and routers)
    are supported.

    \titre {3} {Relations between \italique {topo} and \italique {www} packages}

    You have the choice to run the \italique {topo} and \italique {www}
    packages on the same host or on distinct hosts.

    For security reasons, one would often use a separate server to run
    the \italique {topo} package. This server should be located within
    the administration VLAN of equipments, if you have one.

    The interface between the \italique {topo} package and the rest of
    Netmagis is:
    \liste {
	\item {the ability to send mail from the \italique {topo}
	    server

	}
	\item {the ability for the \italique {www} package to access
	    data extracted from the network graph built on the \italique
	    {topo} server: the \italique {topo} server pushes (via a
	    SSH connection) the file containing the built graph, and
	    the \italique {www} server runs extract commands on demand.

	    This means that the \italique {topo} package must also be
	    installed on the \italique {www} server to provide these
	    commands.

	    This also means that the architecture of the two servers must
	    be compatible (CPU and OS) since the graph is a binary file.
	}
    }

    The rest of this section describes the \italique {topo} package
    installation.

    \titre {3} {On the topo server}

    The first part is the configuration of the \italique {topo} server.

    \liste {
	\item {The first step of installation is to configure the \gras
	    {rancid} software (prerequisite of the \italique {topo}
	    package) on the \italique {topo} server.

	    Detailed information can be found in the README coming with
	    the rancid package. However, here are the minimal steps to
	    a quick configuration:

	    \liste {
		\item {Check that the \teletype {rancid} user is created
		}
		\item {Choose a unique "group" name for all your network
		    equipments. The \italique {topo} package uses the
		    name \teletype {mygroup} by default. The name must
		    be configured in the file \teletype {rancid.conf}
		    (location is system dependant), in the line
		    beginning with \teletype {LIST_OF_GROUPS}.
		    While you are here, notice the \teletype {BASEDIR}
		    directory name.
		}
		\item {Configure a mail alias \teletype
		    {rancid-\italique {groupname}} (in \teletype
		    {/etc/aliases} or equivalent, don't forget to run
		    the command \teletype {newaliases} or equivalent)
		    to receive notifications
		    when rancid detects modifications.
		}
		\item {Configure the \teletype {&tilde;rancid/.cloginrc}
		    file with authentication information. For example:
		    \retrait\teletype {
			add method * \{ssh\} \br
			add password myrouter \{pw\} \{enablepw\} \br
			add password sw-* \{anotherpw\} \{anotherenablepw\}
		    }
		    See the \teletype {cloginrc(5)} manual page for
		    details about this configuration file.

		    Be sure that this file belongs to the \teletype
		    {rancid} user and has mode 0600.
		}
		\item {Initialize the directory tree by running (as the
		    \teletype {rancid} user):
		    \retrait\teletype {rancid-cvs}
		    This program is located in \teletype
		    {/usr/local/libexec/rancid/rancid-cvs} on FreeBSD
		    and in \teletype {/usr/lib/rancid/bin/rancid-cvs}
		    on Linux (Debian/Ubuntu).
		}
		\item {In order to test your rancid installation, name
		    some equipments in the \teletype {router.db} file,
		    which should be located in \teletype
		    {$BASEDIR/\italique {group-name}/router.db}.
		    See the rancid README for instructions.

		    This file will be overwritten by the \italique
		    {topo} package with information from the Netmagis
		    database.
		}
		\item {Test your installation by running:
		    \retrait\teletype {rancid-run}
		    The test is ok if you received a mail with the
		    equipment configuration, which is also stored in the
		    \teletype {$BASEDIR/\italique {group-name}/configs/}
		    directory.
		}
		\item {The rancid README says to run \teletype
		    {rancid-run} periocally with \teletype {cron}.
		    \gras {Do not do this}: the \italique {topo}
		    package will call rancid when needed.
		}
	    }

	    Notice: this is not related to Netmagis installation, but you
	    should consider installing a Web interface to CVS (CVSWeb)
	    to ease tracking of your equipement configuration history.
	}
	\item {The \italique {topo} package must know which equipments
	    are on each side of a network link. Therefore, you have to
	    add information in equipment configurations: a link name (or
	    number) prefixed with L, bracketed with "&lt;" and "&gt;",
	    and added to the description of the interface on each side
	    of the link:

	    \tableau {
		\* \taille {100}
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Equipment}}
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Example}}
		}
		\lignetableau {
		    \casetableau {} {Juniper}
		    \casetableau {} {\teletype {ge-0/1/0 \{ \br
			    ~ ~ description "blah blah &lt;L233&gt;; \br
			    \}
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {Cisco}
		    \casetableau {} {\teletype {interface GigabitEthernet0/1\br
			~ ~ description blah blah &lt;L233&gt;}}
		}
		\lignetableau {
		    \casetableau {} {HP}
		    \casetableau {} {\teletype {interface A1\br
			~ ~ name "blah blah &lt;L233&gt;"}}
		}
	    }

	    You are advised to use the Web application (\gras {Topo}
	    / \gras {Link number} menu item) to get and register link
	    numbers. This way, you keep track of used link numbers,
	    and link numbers are ensured to be unique.

	    Ports connected to individual hosts must be marked with a
	    "&lt;X\>" to indicate a terminal node in the graph.

	    A complete description of the \italique {topo} configuration
	    is \lien {available on a separate page} {config-topo.html}.
	}
	\item {Configure \teletype {.../etc/netmagis.conf} on the
	    \italique {topo} server:

	    \tableau {
		\taille {100}
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \multicasetableau {2} {\centragehorizontal {CENTER}}
			{\gras {netmagis.conf directives}}
		}
		\lignetableau {
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
		}
		\lignetableau {
		    \casetableau {} {rancidcmd}
		    \casetableau {} {Path to the \teletype
			{rancid-run} command}
		}
		\lignetableau {
		    \casetableau {} {ranciddir}
		    \casetableau {} {Rancid group directory (usually
			\teletype {$BASEDIR/\italique {group-name}/})
			where are located:
			\liste {
			    \item {the \teletype {router.db} file which
				lists all polled equipments
			    }
			    \item {the \teletype {configs/} directory
				which contains all configurations
				fetched by rancid
			    }
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {sendcisco, sendhp, sendjuniper}
		    \casetableau {} {Commands used to propagate new
			port configuration on an equipment, if you choose
			to enable the functionnality of letting users
			modify interface configuration.
		    }
		}
		\lignetableau {
		    \casetableau {} {fpingcmd}
		    \casetableau {} {Command used to launch \teletype
			{fping}, in order to test equipment before
			sending commands to change port configuration}
		}
		\lignetableau {
		    \casetableau {} {logger}
		    \casetableau {} {Command used to send a message to
			syslog}
		}
		\lignetableau {
		    \casetableau {} {eqvirtdir}
		    \casetableau {} {Directory used for "virtual
			equipments". Each file is a specially crafted
			configuration which represent one equipment
			whose configuration cannot be fetched by rancid
		    }
		}
		\lignetableau {
		    \casetableau {} {eqgendir}
		    \casetableau {} {Directory used to store results
			of analysis of rancid fetched configurations
		    }
		}
		\lignetableau {
		    \casetableau {} {topobindir}
		    \casetableau {} {Directory where all \italique
			{topo} programs are searched
		    }
		}
		\lignetableau {
		    \casetableau {} {topograph}
		    \casetableau {} {Path name of the graph built
			during \italique {topo} analysis
		    }
		}
		\lignetableau {
		    \casetableau {} {topocpgraph}
		    \casetableau {} {Parameters (user@host:remote-path)
			used to copy the graph built during \italique
			{topo} analysis to the \italique {www}
			server. Leave empty if the \italique {topo}
			and \italique {www} servers are the same host.
		    }
		}
	    }

	}
	\item {Change the ownership to the \gras {rancid} user:
	    \retrait\teletype {# chown -R rancid .../var/netmagis}
	}
	\item {As the \gras {rancid} user, run the following command:
	    \retrait\teletype {$ .../lib/netmagis/topo/anaconf}

	    You will undoubtly notice a large number of warning that
	    you will correct with time. If no fatal error has been
	    encountered, you will normally find in \teletype
	    {.../var/netmagis/network.graph} the modelization of your
	    network. This is a binary file.

	    To check that things are ok, you can use the commands (which
	    all take the binary graph as standard input):
	    \liste {
		\item {dump the graph in clear text:
		    \retrait\teletype {.../lib/netmagis/topo/dumpgraph -a
			&lt; .../var/netmagis/network.graph}
		}
		\item {display all interfaces characteristics of an
		    equipment:
		    \retrait\teletype {.../lib/netmagis/topo/extracteq -a
			\italique {equipment}
			&lt; .../var/netmagis/network.graph}
		}
	    }
	}
	\item {Be sure that the \italique {detecteq} package is properly
	    installed on your central syslog server and/or your central
	    radius server.
	}
	\item {Run the \teletype {topographd} and the \teletype
	    {toposendd} daemons via the provided startup scripts:

	    \tableau {
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \casetableau {} {FreeBSD}
		    \casetableau {} {\teletype
			{/usr/local/etc/rc.d/topographd}
			\br
			\teletype {/usr/local/etc/rc.d/toposendd}}
		}
		\lignetableau {
		    \casetableau {} {Linux}
		    \casetableau {} {copy or link XXXXXXXXXXX
			\teletype {.../etc/rc.d/topographd.sh} and
			\teletype {.../etc/rc.d/toposend.sh}
		    to \teletype {/etc/init.d} directory}
		}
	    }
	}
	\item {If you have choosen to install the \italique {topo}
	    and \italique {www} packages on different servers, you have
	    to configure the SSH connection from the \gras {rancid} user
	    on the \italique {topo} server to a user on the \italique
	    {www} server.

	    This SSH connection is used to copy the network graph computed
	    by the \gras {rancid} user on the \italique {topo} server
	    to the \italique {www} server.  The destination user on
	    the \italique {www} server will own the copied graph, which
	    must be readable by the CGI scripts running under the Apache
	    user. This destination user may be, for example, the Apache
	    user (called www, www-data, nobody, etc., see the "\teletype
	    {User}" directive in Apache configuration files). Let us
	    call it the \gras {w} user.  Make sure this \gras {w} user
	    (on the \italique {www} server) has a home directory and a
	    valid shell.

	    Then, as the \gras {rancid} user on the \italique {topo}
	    server, create a SSH keypair (without pass-phrase):
	    \retrait\teletype {ssh-keygen}
	    Copy the public key (\teletype
	    {&tilde;rancid/.ssh/id_rsa.pub}) to the \teletype
	    {&tilde;w/.ssh/authorized_keys} on the \italique {www} server.

	    Make sure that the \teletype {topocpgraph} configuration
	    parameter is initialized with a line such as:
	    \retrait\teletype {topocpgraph w@www.example.com:.../var/netmagis/network.graph}
	    Warning: the path supplied here is the path of the graph
	    on the \italique {server}, which should match the \teletype
	    {topograph} directive \gras {on the \italique {www} server}.
	}
	\item {If you have choosen to install the \italique {topo}
	    and \italique {www} packages on the same server, make sure
	    that the \teletype {topocpgraph} directive is empty.
	}
    }


    \titre {3} {On the www server}

    You need now to come back to the server which hosts the Web
    application.

    \liste {
	\item {If you have choosen distinct \italique {www} and \italique
	    {topo} servers, you must first install the \italique {topo}
	    package (on the \italique {www} server) in order to use
	    programs which extract data from the network graph. Then,
	    you have to configure the following directives in \teletype
	    {.../etc/netmagis.conf} on the \italique {www} server:

	    \tableau {
		\taille {100}
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \multicasetableau {2} {\centragehorizontal {CENTER}}
			{\gras {netmagis.conf directives}}
		}
		\lignetableau {
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
		}
		\lignetableau {
		    \casetableau {} {topobindir}
		    \casetableau {} {Directory where all \italique
			{topo} programs are searched (on the \italique
			{www} server)
		    }
		}
		\lignetableau {
		    \casetableau {} {topograph}
		    \casetableau {} {Path name of the graph copied
			onto the \italique {www} server.
		    }
		}
	    }

	}
	\item {Direct your web browser to the Netmagis application,
	    and go to the \gras {Admin} / \gras {Application parameters}
	    menu. In this menu:
	    \liste {
		\item {activate the \italique {topo} package}
		\item {change the "Default domain" value: the
		    domain name of your network equipments}
		\item {change the "Topo mail sender" value: you may
		    use an invalid address such as automatic mails
		    generated by the \italique {topo} server don't
		    receive replies.}
		\item {change the "Topo mail receiver" value:
		    {topo} mails will be sent to this address rather
		    than to the genuine \teletype {rancid-\italique
		    {groupname}} alias you've previousely defined.
		}
	    }
	    After activation of the \italique {topo} package, you will
	    see a new \gras {Topology} entry in the left menu.
	}
	\item {Make sure that all your network equipments (and the
	    default domain) exist as hosts (and domain) in the Netmagis
	    database.
	}
	\item {Input your network equipments (as fully qualified domain
	    names) and your VLANs via the \gras {Admin} / \gras {Modify
	    equipments} and \gras {Modify Vlans} menus.
	}
	\item {You can monitor the \teletype {topographd} and \teletype
	    {toposendd} daemons with the \gras {Admin} / \gras {Topod
	    status} menu.
	}
	\item {If you want users to be able to modify interface
	    configuration within the Web application, enter the \gras
	    {Admin} / \gras {Modify users and groups} menu, and input
	    regular expressions in the \gras {Permissions on network
	    equipments} section.
	}
    }

    \titre {3} {Configuring Topo}

    The \lien {Topo configuration documentation} {config-topo.html}
    has all information to complete the Topo configuration.

    Congratulations! You've configured the \italique {topo} package.
    You can now consult your equipments, your network maps, and even
    modify interfaces of your equipments if you enabled this feature!


    \**********************************************************************

    \titre {2} {Metro package installation}

    The Metro package provides metrology data collection on equipments.
    Data collected include:
    \liste {
	\item {traffic}
	\item {ip&lt;-&gt;mac associations (ARP tables)}
	\item {port&lt;-&gt;mac associations (Forwarding tables)}
    }

    At this time, all kinds of equipments are supported for traffic and
    ip/mac collection, provided they run a standard SNMP MIB-2 agent.
    For port/mac collection, Cisco, Juniper and HP equipements are
    supported.

    The metro application is made up of two main programs:
    \liste {
	\item {\teletype {metrocreatedb} which creates metrology sensors
	    based on the metrology collection points defined in the
	    Netmagis database, resulting from equipement configuration
	    fetching by the \italique {topo} package.
	}
	\item {\teletype {metropoller} which performs data collection
	    for each sensor
	}
    }

    The first part of this section describes the configuration of the
    \italique {metro} package.

    \liste {
	\item {Configure \teletype {.../etc/netmagis.conf} on the
	    \italique {metro} server:

	    \retrait\tableau {
		\taille {100}
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \multicasetableau {2} {\centragehorizontal {CENTER}}
			{\gras {netmagis.conf directives}}
		}
		\lignetableau {
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Directive}}
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Description}}
		}
		\lignetableau {
		    \casetableau {} {metrodatadir}
		    \casetableau {} {Main data directory, where
			reporting, logs and rrdtool databases
			are stored (in sub-directories)
		    }
		}
		\lignetableau {
		    \casetableau {} {rrdtool}
		    \casetableau {} {Pathname to the \teletype
			{rrdtool} command
		    }
		}
		\lignetableau {
		    \casetableau {} {rrddb}
		    \casetableau {} {Directory where rrdtool databases
			are stored. Reserve enough disk space for this
			directory.  It is usually a sub-directory of
			\teletype {metrodatadir} but it can be a separate
			directory if you need more disk space.

			FIXME: remove and keep only metrodatadir
		    }
		}
		\lignetableau {
		    \casetableau {} {sensorsurvival}
		    \casetableau {} {Grace period (in days) before
			sensor removal.  This is needed when a sensor
			is no longer updated by \italique {topo} (this
			can be caused by a volontary removal or a bad
			configuration of the equipment). So for safety
			reasons, the polling is really stopped on this
			sensor only after this grace period.
		    }
		}
		\lignetableau {
		    \casetableau {} {pollergroups}
		    \casetableau {} {
			FIXME: provide description of directive first,
			and explanation after.

			Sensors sharing the same characteristics can be
			put in the same group:
			\liste {
			    \item {the running time is short, so
				running them in the same group allows
				a high level of parallelization ; for
				example, the traffic collection sensors
				are usually put in the same group
			    }
			    \item {the sensors are specialized and
				the SNMP collection takes more time
			    }
			}
			We recommand to start with the grouping provided
			in the default configuration and refine the
			configuration afterwards.

			You must declare all your groups with the
			directive "pollergroups".  Names of the different
			groups are separated by a ",".

			FIXME: groups should be separated by a space
			instead of a comma
		    }
		}
		\lignetableau {
		    \casetableau {} {gpopt_&lt;pollergroupname&gt;}
		    \casetableau {} {The gpopt_* directives define
			which sensor types are associated with each
			group defined with the directive "pollergroups".
			\liste {
			    \item {If no sensor type is specified,
				all sensor types will be executed by
				the poller group.
			    }
			    \item {If you want that a poller
				group collects only some of sensor types,
				write the list of type names separated
				by a "," to the "gpopt_GROUP" directive.
				\br
				Example: gpopt_GP2 ipmac,portmac.cisco
			    }
			    \item {If you want that a poller group
				collects all sensor types except "ipmac"
				and "portmac.cisco", write a "!" before
				each type name of sensor separated by a
				"," to the "gpopt_GROUP" directive.
				\br
				Example: gpopt_GP1 !ipmac,!portmac.cisco
			    }
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {gpnbproc_&lt;pollergroupname&gt;}
		    \casetableau {} {Set the number of processes
			launched simultaneously for each poller group. The
			data collection task is shared between the
			different processes which run in parallel.
			You can raise the number of processes to reduce
			the total execution time for all sensors.
		    }
		}
		\lignetableau {
		    \casetableau {} {ifspeed_&lt;ifaceprefixname&gt;}
		    \casetableau {} {Set the speed (in Mbit/s)
			associated to the prefix name of an interface
			type. This configuration is useful to tune the
			maximum values of rrd databases when the SNMP
			ifspeed values collected on the interfaces are
			not reliable.
			\br
			For example: ifspeed_Dot11Radio 300\br
			will limit the maximum speed for all interfaces
			called "Dot11Radio..."	(cisco Aironet radio
			interface) to 300&nbsp;Mb/s.
		    }
		}
		\lignetableau {
		    \casetableau {} {pollerlogfacility}
		    \casetableau {} {Set the syslog facility for
			data collectors. Modify your syslog configuration accordingly. Example for syslog-ng:\br
			\teletype {
				~ ~ filter f_local0 \{ facility(local0); \};\br
				~ ~ destination d_pollerlog \{ file(".../metro/log/poller.log"); \};\br
				~ ~ log \{ source(s_src); filter(f_local0); destination(d_pollerlog); \};\br
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {majdblogfacility}
		    \casetableau {} {Set the syslog facility for
			sensor creation. Modify your syslog configuration accordingly. Example for syslog-ng:\br
			\teletype {
				~ ~ filter f_local1 \{ facility(local1); \};\br
				~ ~ destination d_majdblog \{ file(".../metro/log/majdb.log"); \};\br
				~ ~ log \{ source(s_src); filter(f_local1); destination(d_majdblog); \};\br
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {pollerlogpt}
		    \casetableau {} {Set the default syslog
			level. (FIXME: change directive to
			pollerloglevel)
		    }
		}
		\lignetableau {
		    \casetableau {} {metrohost}
		    \casetableau {} {Set to the server name hosting the metro package ; if 
				metro is installed on the same server as the www package
				set it to "localhost".
		    }
		}
	    }
	}
	\item {Activate the creation of new sensors and collection of
	    data. For this, you must create a user that will run all the
	    \italique {metro} programs and make this user the owner of
	    all the metrodatadir and rrddir directory trees. Let us call
	    this user \gras {m}.

	    Install the sample crontab (\teletype
	    {.../share/examples/netmagis/crontab.metro}) in your default
	    cron system. This crontab should be run by the user \gras {m}.

	    After the fisrt execution of \teletype
	    {.../bin/metrocreatedb}, polling can start.
	}
	\item {Allow access from the www server to the metro webservice:
		NB: the www host must be trusted by the metro server.
		The access to the webservice is not authentified.\br
		Copy the file .../share/examples/apache-metro.conf to your
		apache configuration directory and adapt it to your environment.
		The line starting with \teletype {Allow from} must have the IP address
		of the server running the www package. If www and metro both run on the
		same host, just put \teletype {localhost}.
	}
    }

    The \italique {metro} package is now ready to work. You can create
    sensors in the equipment configurations:

    \liste {
	\item {To activate a traffic sensor on an equipment interface,
	    the only thing to do is to add information in the interface
	    description on the equipment, as you have done with \italique
	    {topo} package.

	    This information is the string \gras {M} concatened with
	    the name of the sensor. You can use any unique name for a
	    sensor. For example, Netmagis authors use the link number
	    (used with the \italique {topo} package) associated with the
	    name of the equipement (since a link number is present on
	    each end of the link), but you can use your own convention.

	    For example:
	    \tableau {
		\* \taille {100}
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Equipment}}
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Example}}
		}
		\lignetableau {
		    \casetableau {} {Juniper}
		    \casetableau {} {\teletype {
			ge-0/1/0 \{ \br
			~ ~ description "core link &lt;L233 M233.eqname&gt;"; \br
			\} \br
		    	ge-0/1/1 \{ \br
			~ ~ description "edge port &lt;X Meqname.desc&gt;"; \br
			\}
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {Cisco}
		    \casetableau {} {\teletype {
			interface GigabitEthernet0/1\br
			~ ~ description core link &lt;L233 M233.eqname&gt;
			\br
                        interface GigabitEthernet0/2\br
			~ ~ description edge port &lt;X Meqname.desc&gt;
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {HP}
		    \casetableau {} {\teletype {
                        interface A1\br
			~ ~ name "core link &lt;L233 M233.eqname&gt;" \br
                        interface A2\br
			~ ~ name "edge port &lt;X Meqname.desc&gt;"
			}
		    }
		}
	    }

	}
	\item {To collect ip-mac and port-mac session, you need to enable
		the mac package in the application configuration in the Admin web interface.\br
		To activate an ipmac sensor in your equipement
	    configuration, you have to add information in the SNMP
	    sysLocation description.

	   This information is just the letter \gras {I}, bracketed with
	   "&lt;" and "&gt;" added to syslocation string.

           Important: The sensor works only if routing is enabled.

	    \tableau {
		\* \taille {100}
		\bordure {1} {}
	    } {
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
		\casedefauttableau {
		    \centragehorizontal {LEFT}
		    \centragevertical {MIDDLE}
		}
	    } {
		\lignetableau {
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Equipment}}
		    \casetableau {\centragehorizontal {CENTER}} {\gras {Example}}
		}
		\lignetableau {
		    \casetableau {} {Juniper}
		    \casetableau {} {\teletype {
			    snmp \{\br
			    ~ ~ location "hi, I'm here &lt;I&gt;"; \br
			    \}
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {Cisco}
		    \casetableau {} {\teletype {
			    snmp-server location hi, I'm here &lt;I&gt;\br
			}
		    }
		}
		\lignetableau {
		    \casetableau {} {HP}
		    \casetableau {} {\teletype {
			    snmp-server location "I'm here &lt;I&gt;"\br
			}
		    }
		}
	    }

	}
	\item {To activate a \gras{portmac} sensor in your equipement
	    configuration, it is the same process is an ipmac sensor;
	    just use &lt;P&gt; (instead of &lt;I&gt;).

	    Important note: if you want activate both ipmac and portmac
	    sensors on the same equipment, insert the string "&lt;I P&gt;
	    in the sysLocation description.
	}
    }

    \gras {Metro data descriptions}
    
    \br \br
    The Metro package generates saveral datas into the following files or
    directories :

    \liste {
    \item {\gras {../var/netmagis/metro/poller/} \br
            This Directory contains the following files :
            \liste {
            \item {\gras {metro.sensor} : list of parameters of all sensors for 
            data collection. This file is generated automatically by 
            metrocreadb.}
            \item {\gras {metro.quarantine} : lists all the sensors which are no longer 
            updated by topo. The sensors are definitively removed after a grace
            period.}
            \item {\gras {metro.plugins} : this file is reserved to be manually updated 
	    in order to execute plugins or sensors which are not automaticaly
            activated.}
            }
    }

    \item {\gras {../var/netmagis/metro/rrddb/} \br
            The rrdtool databases are stored in this directory.
    }

    \item {\gras {../var/netmagis/metro/log/poller.log} \br
            You can find in this log file all the messages generated by sensors
            collection and plugins execution.
    }

    \item {\gras {../var/netmagis/metro/log/syncmetro.log} \br
            All the informations about the creation, deletion of sensors are
            in this log file.
    }

    \item {\gras {../var/netmagis/metro/report/} \br
	    This directory contains the results of the ipmac and portmac 
            collection before storing them in the mac database.
    }

    \item {\gras {../var/netmagis/metro/cache/} \br
            This directory contains the caches files created by the sensors 
            collection. By example, the (ip,interface name,SNMP interface index)
            relation.
    }

    \item {\gras {../var/netmagis/metro/lock} \br
	    This Directory contains the locks files created by some scripts 
            (metrocreatedb, plugin-ipmac or plugin-portmac) in order to avoid 
            multiple executions of the same script in the same time.
	    \gras {Important} : If a crash of a script occurs, the lock file
            must be removed.
    }
    }
}

}
