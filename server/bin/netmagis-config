#!/bin/sh

#
# Gets config parameters from netmagis configuration file
#
# Syntax :
#	netmagis-config [-h][-f conffile][-c] param ... param
#

usage ()
{
    (
	echo "usage: $0 [-h][-f conffile][-c] param .... param"
	echo "  -c : check each parameter for existance"
    ) >&2
    exit 1
}

# default: do not check
check=false

##############################################################################
# Default values may be overriden by environment variables
##############################################################################

get_default_value ()
{
    case "$1" in
	config)  echo ${NETMAGIS_CONFIG:-%CONFFILE%} ;;
	libdir)  echo ${NETMAGIS_LIBDIR:-%NMLIBDIR%} ;;
	version) echo ${NETMAGIS_VERSION:-%VERSION%} ;;
	*)       echo "Internal error: no default for '$1'" >&2 ; exit 1 ;;
    esac
}

##############################################################################
# Check for parameter existance
##############################################################################

# $1: conffile
# $2: param
check_param ()
{
    local conffile="$1" param="$2" r=0

    if ! grep -q "^$param[ 	]" "$conffile"
    then
	echo "Netmagis configuration parameter '$param' is not initialized" >&2
	r=1
    fi
    return $r
}

##############################################################################
# Get parameter value
##############################################################################

# $1: conffile
# $2: param
get_param ()
{
    local conffile="$1" param="$2"

    sed -n "/^$param[ 	][ 	]*/s///p" "$conffile" \
	| sed \
	    -e 's/\\/&&/g' \
	    -e "s/'/'\\\''/g"
}


##############################################################################
# Main program
##############################################################################

# default configuration file
conffile=$(get_default_value "config")

#
# Syntax checking
#       
 
args=`getopt hf:c $*`

if [ $? != 0 ]
then usage
fi


set -- $args

while true
do
    case "$1" in
	-h) usage
	    exit 0
	    ;;
	-f) conffile="$2"
	    shift 2
	    ;;
	-c) check=true
	    shift
	    ;;
	--) shift
	    break
	    ;;
    esac
done

#
# Do actions
#

if [ $check = true ]
then
    failed=false
    for param
    do
	if ! check_param "$conffile" "$param"
	then failed=true
	fi
    done

    if [ $failed = true ]
    then
	exit 1
    fi
fi


OUT=""
first=true
for param
do
    if [ $first = true ]
    then
	first=false
    else
	OUT="$OUT "
    fi
    OUT="$OUT$param='$(get_param $conffile $param)'"
done

echo "$OUT"

exit 0
