How to release a Netmagis version?

2012/03/06	pda, jean

This document describes step by step the Netmagis release engineering process.

TODO:
    - update demo application


Git branches and tags
---------------------

Starting from v2.1.0, Netmagis use a new version numbering scheme:
- X.Y.0 releases are function-oriented
- X.Y.Z releases are maintenance releases

Taking the v2.1.0 release as an example:
- v2.1.0 release is the first of the 2.1 branch
- when bug fixes appear, new versions are added to the 2.1 branch:
    v2.1.1, v2.1.2, etc.

To do so, the git repository have branches and tags
- X.Y are branches in the git repository
- each release have a matching tag vX.Y.Z : v2.1.0, v2.1.1, etc.

So, during development of the future 2.3 branch, the repository
vill looks like:

    ---------------------------------------->	master : current dev
	\         \
	 \         `v2.2.0--*--*--*--v2.2.1-->	2.2 branch : bug fix
	  \
	   `v2.1.0--*--*--*--*--v2.1.1--*-->	2.1 branch : obsolete


How to release, step by step
----------------------------

1. On the development server

    1.a. You should already be in the development branch

	git checkout X.Y

    1.b. Be sure to get the files updated

	cd $NETMAGIS
	git pull

    1.c. Update the CHANGES file to reflect changes made by the
	release, and don't forget to update the release date

    1.d. Update version number

	cd $NETMAGIS
	vi Makefile				# Modify the VERSION variable

    1.e. Check everything is ok before releasing

	./devtools/utils/mkrel -n X.Y.Z

    1.f. If everything is ok, tag the release

	./devtools/utils/mkrel X.Y.Z

    1.g. Copy the tar.gz file to the distribution server

	scp netmagis*.tar.gz www:/www/docs/files/

2. On the web server

    2.a. Be sure to get the files updated

	cd $NETMAGIS
	git pull

    2.b. Update the doc/netmagis/relnotes.htgt to reflect changes
	made by the release, and don't forget to update the release date

    2.c. Update installation documentation and web site 

	umask 002
	cd $NETMAGIS/doc/netmagis.org
	cp install-$OLDVERSION.htgt install-$VERSION.htgt
	# update installation documentation
	vi install-$VERSION.htgt
	# update links to new version (install, download etc.)
	vi index.* news.* doc.* download.*
	cd $NETMAGIS
	make \
	    DESTDIR=/www/docs \
	    TCLSH=/usr/local/bin/tclsh8.5 \
	    TCLCONF=/usr/share/tcltk/tcl8.5/tclConfig.sh \
	    install-netmagis.org

    2.d. Update screenshots

	cd $NETMAGIS/doc/netmagis.org
	# create new screenshots (1024x768) as shot-*.png
	for i in shot-*.png ; do cp $i `echo $i | sed 's/shot-/vign-/'` ; done
	mogrify -resize 256x192 vign-*.png

    2.e. Commit changes

	git commit -a

3. On the Debian/Ubuntu host

    See README.md in netmagis-debian repository.

4. Announce the release

    4.a Post to the netmagis mailing-list

	If this is a major version, post to some other carefully
	choosen lists

    4.b Close all remaining issues for this milestone

	https://github.com/pdav/netmagis/issues

5. Prepare new version vX.Z

    5.a Change git branch

	git checkout master

    5.b Create a github milestone for the new version

	If needed, create a milestone vX.Z on
	https://github.com/pdav/netmagis/issues/milestones

    5.b Open release engineering issues for the new version

	create issues labelled :
	    CHANGES and release notes
	    Installation documentation for vX.Z
	and associate them to the newly created milestone
